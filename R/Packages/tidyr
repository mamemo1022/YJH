# tidyr -------------------------------------------------------------------

# tidy data - 하나의 열은 하나의 변수, 하나의 행은 하나의 케이스, 하나의 값은 하나의 셀을 만족하는 데이터

# import packages
# "tidyr"은 "tidyverse"의 일부분, 즉, "tidyverse"를 불러와도 tidyr 사용가능
if (!require(tidyverse)) {install.packages("tidyverse")}; require(tidyverse)
if (!require(tidyr)) {install.packages("tidyr")}; require(tidyr)

# 예제 데이터
iris
mtcars
mtcars$carnames <- rownames(mtcars)

# drop_na()
df <- tibble(x = c(1, 2, NA, 4, 5), y = c("a", NA, "c", "d", "e")); df
df %>% drop_na()
df %>% drop_na(x) # x변수 na 제거
df %>% drop_na(y) # y변수 na 제거


# expand() - 수준조합 생성
table(mtcars$vs, mtcars$cyl)
expand(mtcars, vs, cyl) # 모든 수준조합
expand(mtcars, nesting(vs, cyl)) # 데이터내 존재하는 수준조합

mtcars %>% expand(1:3, cyl)
mtcars %>% expand(vs = full_seq(vs, 1), cyl)


# complete()
mtcars %>% complete(vs, cyl)
mtcars %>% complete(nesting(vs, cyl))


# crossing()
formulas <- list(formula1 = Sepal.Length ~ Sepal.Width,
                 formula2 = Sepal.Length ~ Sepal.Width + Petal.Width,
                 formula3 = Sepal.Length ~ Sepal.Width + Petal.Width + Petal.Length)
data <- split(iris, iris$Species)
crossing(formula = formulas, data)


# extract() - 1 column -> # columns
df <- data.frame(x = c(NA, "a-b", "a-d", "b-c", "d-e"))
df %>% extract(x, "A")
df %>% extract(x, c("A", "B"), "([[:alnum:]]+)-([[:alnum:]]+)")

mtcars %>% extract(carnames, "A")
mtcars %>% extract(carnames, c("A", "B"), "([[:alnum:]]{1,}) ([[:alnum:]]{1,})")
mtcars %>% extract(carnames, c("A", "B", "c"), "([[:alnum:]]{1,}) ([[:alnum:]]{1,}) ([[:alnum:]]{1,})")

# fill() - NA값 채우기
df <- data.frame(X = 1:12, Y = c(1:4, NA, 6:10, NA, 12)); df
df %>% fill(Y, .direction = "up")
df %>% fill(Y, .direction = "down")


# full_seq() - full sequence of values in a vector
full_seq(c(1, 2, 3, 10), 1)
full_seq(c(10, 20), 1)


# gather()
# same results
iris %>% gather(key = variable, value = value, Sepal.Length:Petal.Width)
iris %>% gather(key = variable, value = value, -Species)
iris %>% gather(key = variable, value = value, 1:4)
iris %>% gather(key = variable, value = value, Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)


# nest() - nest repeated values in a list-variable
as_tibble(iris) %>% nest(-Species)
nest(as_tibble(iris), -Species)$Species
nest(as_tibble(iris), -Species)$data
as_tibble(iris) %>% nest(-Species) %>% unnest()


# replace_na() - replace missing values
df <- data.frame(X = c(1:12, NA), Y = c(1:4, NA, 6:10, NA, 12, 13)); df
df %>% replace_na(list(X = "unknown", Y = "unknown"))
df$Y %>% replace_na("unknown")


# separate() - separate 1 column -> # columns
mtcars %>% separate(carnames, c("A", "B", "C"))
mtcars %>% separate(carnames, c("A", "B", "C"), extra = "warn", fill = "right")
mtcars %>% separate(carnames, c("A", "B", "C"), extra = "warn", fill = "left")
mtcars %>% separate(carnames, c("A", "B", "C"), extra = "drop", fill = "right")
mtcars %>% separate(carnames, c("A", "B", "C"), extra = "drop", fill = "left")
mtcars %>% separate(carnames, c("A", "B", "C"), extra = "merge", fill = "right")
mtcars %>% separate(carnames, c("A", "B", "C"), extra = "merge", fill = "left")

mtcars %>% separate(carnames, c("A", "B", "C"), " ")
mtcars %>% separate(carnames, c("A", "B"), " ", extra = "warn")
mtcars %>% separate(carnames, c("A", "B"), " ", extra = "drop")
mtcars %>% separate(carnames, c("A", "B"), " ", extra = "merge")


# separate_rows() - separate a collapsed column -> # rows
df <- data.frame(x = 1:3,
                 y = c("a", "d,e,f", "g,h"),
                 z = c("1", "2,3,4", "5,6"),
                 stringsAsFactors = FALSE); df
separate_rows(df, y, z, convert = TRUE)


# spread() - spread a key-value pair across # columns
iris %>% gather(variable, value, -Species) %>% spread(variable, value) # Error ???

stocks <- data.frame(time = as.Date('2009-01-01') + 0:9,
                     X = rnorm(10, 0, 1),
                     Y = rnorm(10, 0, 2),
                     Z = rnorm(10, 0, 4))
stocks %>% gather(stock, price, -time)
stocks %>% gather(stock, price, -time) %>% spread(stock, price)
stocks %>% gather(stock, price, -time) %>% spread(time, price)


# uncount() - "Uncount" a data frame
df <- tibble::tibble(x = c("A", "B"), n = c(1, 2)); df
uncount(df, n)
uncount(df, n, .id = "id")


# unite() - unite # columns -> 1 column
mtcars %>% unite("vs_am", vs, am)
mtcars %>% unite("vs_am", vs, am) %>% separate(vs_am, c("vs", "am"))

